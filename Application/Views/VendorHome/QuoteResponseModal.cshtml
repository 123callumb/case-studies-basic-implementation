@using Services.EntityFramework.DbEntities
@model Services.Models.DTOs.QuoteDTO

<div>
    <h2>@Model.VendorItem.ItemName</h2>
    <div>@Model.VendorItem.ItemDescription</div>
    <div><b>Quantity Requested:</b> @Model.QuantityRequested</div>
    <hr />
    <h3>Previous Responses</h3>
    <div>
        @foreach (var response in Model.Responses)
        {
            <hr />
            <div class="status-box" style="background-color:@response.Status.Colour">@response.Status.StatusName</div>
            <b>Date:</b>
            <div>@response.ResponseDate.ToShortDateString()</div>
            <b>Message:</b>
            <br />
            <div>@response.ReponseText</div>
            <b>Price Offered:</b>
            <br />
            <div>£@response.QuotePrice</div>
        }
    </div>
    @if (Model.Responses.OrderByDescending(o => o.QuoteResponseId).First().Status.AsEnum == QuoteStatusEnum.AWAITING_REVIEW)
    {
        <h4>Still awaiting response from abc for the previous offer.</h4>
    }
    else
    {
        @{ QuoteResponse newRes = new QuoteResponse() }
        <h3>New Ressponse</h3>
        <form asp-controller="QuoteResponse" asp-action="Create" method="post">
            <input asp-for="@newRes.ReponseText" />

        </form>
    }
</div>