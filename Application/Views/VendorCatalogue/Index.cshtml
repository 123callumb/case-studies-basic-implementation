@model VendorCatalogueViewModel
@{
    ViewData["Title"] = "Vendor Catalogue";
}

<style>
    .localBG {
        background-color: #97D99D;
    }

    .searchBar {
        width: 100%;
        margin: auto;
        margin-top: 5px;
    }

        .searchBar > div:first-of-type {
            background-color: rgb(240, 240, 240);
            display: inline-flex;
        }

        .searchBar > div:last-of-type:hover {
            cursor: pointer;
        }

        .searchBar input {
            border: 0;
            background-color: transparent;
            margin: 12px;
            flex: 1;
        }

            .searchBar input:focus {
                border: 10px;
                outline: 0;
            }

    .catalogueItem {
        display: flex;
        flex-direction: row;
    }

    .listingImage {
        flex: 1;
        width: 20%;
        border: 1px solid black;
        background-size: cover;
        background-repeat: no-repeat;
    }

        .listingImage > img {
            width: 100%;
        }

    .listingContent {
        padding: 0px 20px;
        width: 60%;
    }

    .subtitile {
        margin-bottom: 0;
        font-weight: 600;
    }

    .listingNav {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        text-align: center;
        padding-left: 20px;
    }

    .listingButton {
        display: flex;
        padding: 12px;
        font-weight: 600;
    }

        .listingButton:hover {
            cursor: pointer;
        }

        .listingButton > input {
            flex: 1;
            border: 0;
            text-align: center;
            background-color: transparent;
        }

            .listingButton > input:focus {
                outline: 0;
            }

        .listingButton > span {
            color: white;
            flex: 1;
        }
</style>

<div class="text-center">
    <img class="my-5 shadow-lg rounded" src="~/img/ABCEnergyLogo.PNG" />
    <div class="d-flex flex-column flex-sm-row align-items-center">
        <!-- Breadcrumb, User name, Home button and Logout button -->
        <ol class="breadcrumb me-auto">
            <li class="breadcrumb-item" aria-current="page" data-voice>@Html.ActionLink("Home", "Index", "Home", null, new { @class = "btn-link" })</li>
            <li class="breadcrumb-item" aria-current="page" data-voice>@Html.ActionLink("Vendor", "VendorMenu", "Home", null, new { @class = "btn-link" })</li>
            <li class="breadcrumb-item active" aria-current="page">Catalogue</li>
        </ol>
        <div class="me-3">@Model.user.Email</div>
        <div data-voice>
            @Html.ActionLink("Home", "Index", "Home", null, new { @class = "btn-link" })
        </div>
        <a class="btn btn-link" href="@Url.Action("LogoutUser", "Authentication")" data-voice="log out">Logout</a>
    </div>
</div>
@* Alerts *@

<div class="alert alert-success alert-dismissible fade show" role="alert" id="successAlert" style="display:none;" data-voice>
    Quote request for <strong><span id="successText"></span></strong> successful!
    <button type="button" class="btn-close" onclick="closeSuccess()"></button>
</div>

<div class="alert alert-danger alert-dismissible fade show" role="alert" id="errorAlert" style="display:none;">
    Something went wrong.
    <button type="button" class="btn-close"onclick="closeError()"></button>
</div>


@*search bar *@
<div class="p-3 bg-white">
    <div style="text-align:right;" class="localBG cs-green">
        <span class="material-icons-outlined" style="color:white; padding:5px;">
            next_week
        </span>
    </div>
    <div class="row searchBar">
        <div class="col-10">
            <div style="width:4%; min-width:30px;">
                <span class="material-icons" style="padding:14px;">
                    search
                </span>
            </div>
            <div data-voice="Search Bar" class="width:96%" style="display: flex; flex:1">
                <input type="text" id="searchInput" onkeydown="readInput(this, event)" placeholder="@ViewBag.SearchTerm" />
            </div>
        </div>
        <div data-voice class="col-2 cs-green text-center" id="searchButton" style="color:white; padding:15px; font-weight:600;">
            Search
        </div>
    </div>
</div>

<p style="font-weight:600; margin-bottom:0; margin-top:10px;">Showing Results @Model.VendorItems.Count() of @Model.VendorItems.Count()</p>
@for (int i = 0; i < Model.VendorItems.Count(); i++)
{
    @* results *@
    <div class="p-3 bg-white catalogueItem">
        <div class="listingImage" style="background-image:url(@Model.VendorItems[i].ItemImageURL)">
        </div>
        <div class="listingContent" data-voice>
            <h3>@Model.VendorItems[i].ItemName</h3>
            <p class="subtitile">Supplier</p>
            <p>@Model.VendorItems[i].VendorName</p>
            <p class="subtitile">Description</p>
            <p>@Model.VendorItems[i].ItemDescription</p>
        </div>
        <hr width="1" size="150">
        <div class="listingNav">
            <div class="listingButton" style="background-color: rgb(240, 240, 240);">
                <input data-voice="Enter Quantity" id="quantity_@Model.VendorItems[i].ItemID" type="number" placeholder="Enter Quantity" />
            </div>
            <div data-voice class="listingButton cs-green" onclick="requestQuote(@Model.VendorItems[i].ItemID)">
                <span>Request quote</span>
            </div>
        </div>
    </div>
    <br />
}

@section Scripts{
    <script type="text/javascript">
        window.addEventListener('load', (event) => {
            document.getElementById("searchInput").focus();
        });

        function runAction() {
            location.href = '@Url.Action("VendorCatalogueSearch", "VendorCatalogue")?searchTerm=' + document.getElementById('searchInput').value;
        }

        function readInput(el, e) {
            if (e.keyCode == 13) {
                runAction();
            }
        }

        document.getElementById('searchButton').addEventListener('click', function () {
            runAction();
        });

        async function requestQuote(vendorItemID) {
            var quantityInput = document.getElementById("quantity_" + vendorItemID);
            var quantity = quantityInput.value;

            if (quantity > 0) {
                const res = await MakeRequest("/VendorCatalogue/RequestVendorQuote", "POST", {
                    VendorItemID: vendorItemID,
                    Quantity: quantity,
                    SearchTerm: document.getElementById('searchInput').value
                });
                var parsedData = JSON.parse(res.data);
                if (parsedData.success) {
                    quantityInput.value = null;
                    document.getElementById('successText').textContent = parsedData.quantity + "x " + parsedData.itemName;
                    document.getElementById('successAlert').style.display = "block";
                } else {
                    document.getElementById('errorAlert').style.display = "block";
                }
            } else quantityInput.parentElement.style.border = "1px solid red";         
        }

        function closeSuccess() {
            document.getElementById('successAlert').style.display = "none";
        }
        function closeError() {
            document.getElementById('errorAlert').style.display = "none";
        }
    </script>
}