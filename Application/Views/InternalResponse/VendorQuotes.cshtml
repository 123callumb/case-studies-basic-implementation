@model VendorQuoteViewModel
@{
    ViewData["Title"] = "Vendor Quotes";
}

<div class="text-center">
    <img class="my-5 shadow-lg rounded" src="~/img/ABCEnergyLogo.PNG" />
    <div class="d-flex flex-column flex-sm-row align-items-center">
        <!-- Breadcrumb, User name, Home button and Logout button -->
        <ol class="breadcrumb me-auto">
            <li class="breadcrumb-item" aria-current="page" data-voice>@Html.ActionLink("Home", "Index", "Home", null, new { @class = "btn-link" })</li>
            <li class="breadcrumb-item active" aria-current="page" data-voice>@Html.ActionLink("Vendor", "VendorMenu", "Home", null, new { @class = "btn-link" })</li>
            <li class="breadcrumb-item active" aria-current="page">Vendor Quotes</li>
        </ol>
        <div class="me-3">@Model.user.Email</div>
        <div data-voice>
            @Html.ActionLink("Home", "Index", "Home", null, new { @class = "btn-link" })
        </div>
        <a class="btn btn-link" data-voice="log out" href="@Url.Action("LogoutUser", "Authentication")">Logout</a>
    </div>
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a id="tabAll" class="nav-link active" aria-current="page" href="#" data-voice>All</a>
        </li>
        <li class="nav-item">
            <a id="tabApproved" class="nav-link" href="#" data-voice>Approved</a>
        </li>
    </ul>
    <div class="p-3 bg-white text-start">
        <div class="d-flex flex-column">
            <div id="tabAllQuotes" class="col">
                @foreach (var quote in Model.Quotes)
                {
                    <div class="quote-item mt-2 row shadow-sm">
                        <div class="col-3 text-center px-0">
                            <div class="w-100 h-100" style="background-image: url(@quote.VendorItem.ItemImageURL); background-size: cover; background-position: center"></div>
                        </div>
                        <div class="col-7 p-3" data-voice>
                            @if (quote.LatestStatus == null)
                            {
                                <div class="bg-danger status-box">Response Required</div>
                            }
                            else
                            {
                                <div class="status-box" style="background-color: @quote.LatestStatus.Colour">@quote.LatestStatus.StatusName</div>
                            }
                            <h5 class="mt-2">@quote.VendorItem.ItemName</h5>
                            <div>
                                <div><b>Quantity requested:</b> @quote.QuantityRequested.ToString()</div>
                                <div><b>Quote date:</b> @quote.QuoteDate.ToString("dd-MM-yyyy")</div>
                            </div>
                        </div>
                        <div class="col-2 p-3 text-end">
                            <div class="btn-primary" data-responder-btn="@quote.QuoteID" data-voice>Open Quote</div>
                        </div>
                    </div>
                }
            </div>
            <div id="tabApprovedQuotes" class="col">
                @{ var isApprovedQuotes = false; }
                @foreach (var quote in Model.Quotes)
                {
                    @if (quote.LatestStatus != null)
                    {
                        @if (quote.LatestStatus.AsEnum == QuoteStatusEnum.APPROVED)
                        {

                            isApprovedQuotes = true;
                            <div class="quote-item mt-2 row shadow-sm">
                                <div class="col-3 text-center px-0">
                                    <div class="w-100 h-100" style="background-image: url(@quote.VendorItem.ItemImageURL); background-size: cover; background-position: center"></div>
                                </div>
                                <div class="col-7 p-3">
                                    @if (quote.LatestStatus == null)
                                    {
                                        <div class="bg-danger status-box">Response Required</div>
                                    }
                                    else
                                    {
                                        <div class="status-box" style="background-color: @quote.LatestStatus.Colour">@quote.LatestStatus.StatusName</div>
                                    }
                                    <h5 class="mt-2">@quote.VendorItem.ItemName</h5>
                                    <div>
                                        <div><b>Quantity requested:</b> @quote.QuantityRequested.ToString()</div>
                                        <div><b>Quote date:</b> @quote.QuoteDate.ToString("dd-MM-yyyy")</div>
                                    </div>
                                </div>
                                <div class="col-2 p-3 text-end">
                                    <div class="btn-primary" data-responder-btn="@quote.QuoteID">Open Quote</div>
                                </div>
                            </div>
                        }
                    }
                }
                @if (!isApprovedQuotes)
                {
                    <div class="quote-item mt-2 row-sm text-center">No Approved Requests</div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/js/quote-responder-modal.js" asp-append-version="true"></script>
    <script type="text/javascript">
        window.addEventListener('load', (event) => {
            document.querySelector('#tabApprovedQuotes').style.display = "none";
            QuoteModal({
                quoteResponderModal: '@Url.Action("QuoteResponderModal", "InternalResponse")',
                respondToQuote: '@Url.Action("Respond", "InternalResponse")'
            });
        });

        document.querySelector('#tabApproved').addEventListener('click', (t) => {
            document.querySelector('#tabApprovedQuotes').style.display = "block";
            document.querySelector('#tabAllQuotes').style.display = "none";
            document.querySelector('#tabApproved').classList.add('active');
            document.querySelector('#tabAll').classList.remove('active');
        });

        document.querySelector('#tabAll').addEventListener('click', (t) => {
            document.querySelector('#tabApprovedQuotes').style.display = "none";
            document.querySelector('#tabAllQuotes').style.display = "block";
            document.querySelector('#tabApproved').classList.remove('active');
            document.querySelector('#tabAll').classList.add('active');
        });
    </script>
}
