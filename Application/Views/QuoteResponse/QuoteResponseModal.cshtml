@using Services.EntityFramework.DbEntities
@model Services.Models.DTOs.QuoteDTO

<div>
    <div style="background-image: url(@Model.VendorItem.ItemImageURL)"></div>
    <h2>@Model.VendorItem.ItemName</h2>
    <div>@Model.VendorItem.ItemDescription</div>
    <div><b>Quantity Requested:</b> @Model.QuantityRequested</div>
    <hr />
    <h4>Previous Responses</h4>
    <div>
        @foreach (var response in Model.Responses)
        {
            <hr />
            <div class="status-box" style="background-color:@response.Status.Colour">@response.Status.StatusName</div>
            <b>Date:</b>
            <div>@response.ResponseDate.ToShortDateString()</div>
            <b>Message:</b>
            <br />
            <div>@response.ReponseText</div>
            <b>Price Offered:</b>
            <br />
            <div>£@response.QuotePrice</div>
        }
    </div>
    <hr />
    @if (Model.Responses.Any() && Model.Responses.OrderByDescending(o => o.QuoteResponseId).First().Status.AsEnum == QuoteStatusEnum.AWAITING_REVIEW)
    {
        <h4>Still awaiting response from abc for the previous offer.</h4>
    }
    else
    {
        <h4>New Ressponse</h4>
        <form data-form-for="new-response">
            <label class="form-label">Price Quoted</label>
            <input data-name="Quote" type="number" step="0.01" min="0" placeholder="0.00" class="form-control"/>
            <label class="form-label">Response Description</label>
            <input  data-name="ReponseText" class="form-control" />
            <input type="hidden" value="@Model.QuoteID"  data-name="QuoteID" />
            <div type="submit" class="btn-primary mt-3 border-0" data-new-res-btn>Send Quote Response</div>
        </form>
    }
</div>